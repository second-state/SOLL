name: build and test SOLL

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_test_gcc_debug:
    runs-on: ubuntu-latest
    container:
      image: secondstate/soll:latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup build folder
      run: |
        rm -rf build
        mkdir -p build

    - name: Build SOLL using g++
      run: |
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DSOLL_INCLUDE_TESTS=true -DSOLL_RUNTIME_TESTS=true ..
        make -j2

    - name: Test SOLL
      run: |
        cd build
        ctest
    
    - name: SOLL Runtime Test
      run: |
        cd test/soll-runtime-test
        bash runtest.sh

  build_and_test_gcc_release:
    runs-on: ubuntu-latest
    container:
      image: secondstate/soll:latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup build folder
      run: |
        rm -rf build
        mkdir -p build

    - name: Build SOLL using g++
      run: |
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DSOLL_INCLUDE_TESTS=true ..
        make -j2

    - name: Test SOLL
      run: |
        cd build
        ctest

  build_and_test_gcc_debug_coverage:
    runs-on: ubuntu-latest
    container:
      image: secondstate/soll:latest

    steps:
    - uses: actions/checkout@v2

    - name: Install curl and gcovr
      run: |
        apt update
        apt install -y curl gcovr

    - name: Setup build folder
      run: |
        rm -rf build
        mkdir -p build

    - name: Build SOLL using g++
      run: |
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DSOLL_INCLUDE_TESTS=true -DSOLL_COVERAGE=true ..
        make -j2 codecov

    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./build/codecov.xml
        name: codecov-soll
        fail_ci_if_error: true
        path_to_write_report: ./build/codecov_report.gz
